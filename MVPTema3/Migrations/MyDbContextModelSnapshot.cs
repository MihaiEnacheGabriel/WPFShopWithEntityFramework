// <auto-generated />
using System;
using MVPTema3Magazin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVPTema3.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVPTema3.Models.Bon", b =>
                {
                    b.Property<int>("ID_bon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_bon"));

                    b.Property<int>("CasierID_utilizator")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_eliberare")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Suma_incasata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID_bon");

                    b.HasIndex("CasierID_utilizator");

                    b.ToTable("Bon");
                });

            modelBuilder.Entity("MVPTema3.Models.Categorie", b =>
                {
                    b.Property<int>("ID_categorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_categorie"));

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Nume_categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_categorie");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("MVPTema3.Models.Producator", b =>
                {
                    b.Property<int>("ID_producator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_producator"));

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Nume_producator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tara_origine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_producator");

                    b.ToTable("Producator");
                });

            modelBuilder.Entity("MVPTema3.Models.Produs", b =>
                {
                    b.Property<int>("ID_produs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_produs"));

                    b.Property<int>("CategorieID_categorie")
                        .HasColumnType("int");

                    b.Property<string>("Cod_bare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("In_stock")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Nume_produs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducatorID_producator")
                        .HasColumnType("int");

                    b.HasKey("ID_produs");

                    b.HasIndex("CategorieID_categorie");

                    b.HasIndex("ProducatorID_producator");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("MVPTema3.Models.ProdusVandut", b =>
                {
                    b.Property<int>("ID_produsvandut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_produsvandut"));

                    b.Property<int>("BonID_bon")
                        .HasColumnType("int");

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("ProdusID_produs")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_produsvandut");

                    b.HasIndex("BonID_bon");

                    b.HasIndex("ProdusID_produs");

                    b.ToTable("ProdusVandut");
                });

            modelBuilder.Entity("MVPTema3.Models.Stoc", b =>
                {
                    b.Property<int>("ID_stoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_stoc"));

                    b.Property<decimal>("AdaosComercial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_aprovizionare")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_expirare")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Pret_achizitie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pret_vanzare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdusID_produs")
                        .HasColumnType("int");

                    b.Property<string>("Unitate_masura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_stoc");

                    b.HasIndex("ProdusID_produs");

                    b.ToTable("Stoc");
                });

            modelBuilder.Entity("MVPTema3.Models.Utilizator", b =>
                {
                    b.Property<int>("ID_utilizator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_utilizator"));

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_admin")
                        .HasColumnType("bit");

                    b.Property<string>("Nume_utilizator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_utilizator");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("MVPTema3.Models.Bon", b =>
                {
                    b.HasOne("MVPTema3.Models.Utilizator", "Casier")
                        .WithMany("Bonuri")
                        .HasForeignKey("CasierID_utilizator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casier");
                });

            modelBuilder.Entity("MVPTema3.Models.Produs", b =>
                {
                    b.HasOne("MVPTema3.Models.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieID_categorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVPTema3.Models.Producator", "Producator")
                        .WithMany()
                        .HasForeignKey("ProducatorID_producator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Producator");
                });

            modelBuilder.Entity("MVPTema3.Models.ProdusVandut", b =>
                {
                    b.HasOne("MVPTema3.Models.Bon", "Bon")
                        .WithMany("ProduseVandute")
                        .HasForeignKey("BonID_bon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVPTema3.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusID_produs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bon");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("MVPTema3.Models.Stoc", b =>
                {
                    b.HasOne("MVPTema3.Models.Produs", "Produs")
                        .WithMany("Stoc")
                        .HasForeignKey("ProdusID_produs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("MVPTema3.Models.Bon", b =>
                {
                    b.Navigation("ProduseVandute");
                });

            modelBuilder.Entity("MVPTema3.Models.Produs", b =>
                {
                    b.Navigation("Stoc");
                });

            modelBuilder.Entity("MVPTema3.Models.Utilizator", b =>
                {
                    b.Navigation("Bonuri");
                });
#pragma warning restore 612, 618
        }
    }
}
